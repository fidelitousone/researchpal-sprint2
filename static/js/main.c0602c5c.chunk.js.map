{"version":3,"sources":["reportWebVitals.js","Socket.jsx","GoogleButton.jsx","FacebookButton.jsx","MicrosoftButton.jsx","NavigationBar.jsx","CreateProject.jsx","UserInfoBar.jsx","CreateSource.jsx","index.js","Landing.jsx","Dashboard.jsx","Project.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Socket","SocketIO","GoogleAuth","history","useHistory","clientId","buttonText","onSuccess","response","console","log","emit","email","profileObj","on","data","push","handleSubmit","onFailure","cookiePolicy","FacebookAuth","appId","autoLoad","fields","callback","status","MicrosoftAuth","authCallback","err","undefined","account","userName","buttonTheme","withUserData","graphScopes","NavigationBar","Container","style","textAlign","ButtonGroup","justifyContent","alignItems","aria-label","to","Button","variant","CreateButton","projects","align","onSubmit","event","projectName","document","getElementById","value","projectList","Object","values","map","obj","project_name","validator","isEmpty","trim","ReactDOM","Alert","className","some","name","socketid","id","preventDefault","placeholder","type","UserInfoBar","props","headerInfo","badgeInfo","profilePicture","Row","noGutters","Col","xs","Badge","DropdownButton","title","Image","src","width","height","roundedCircle","CreateSource","React","sourcesList","setSourcesList","sourcesMapList","setSourcesMapList","usingProject","source_list","source_map","entries","sourceID","sourceName","onClick","index","source_id","deleteSource","sourceLink","source_link","render","StrictMode","path","component","Jumbotron","fluid","lg","exact","setProjects","user","setUser","image","setImage","profile_picture","imagelink","keys","key","val","getStatus","setProjectName"],"mappings":"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","file":"static/js/main.c0602c5c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as SocketIO from 'socket.io-client';\r\n\r\nconst Socket = SocketIO.connect(\"localhost:8080\");\r\nexport default Socket;\r\n","import * as React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function GoogleAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_google_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new google user to server!');\r\n\r\n    Socket.emit('login_request', {\r\n      email: response.profileObj.email,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n    history.push('/home');\r\n  }\r\n\r\n  function responseGoogleSuccess(response) {\r\n    console.log('Success:', response);\r\n    handleSubmit(response);\r\n  }\r\n\r\n  function responseGoogleFailure(response) {\r\n    console.log('FAIL:', response);\r\n  }\r\n\r\n  return (\r\n    <GoogleLogin\r\n      clientId=\"392545713863-91sppbihnj638rth8gg7upfvjoug9s98.apps.googleusercontent.com\"\r\n      buttonText=\"Login\"\r\n      onSuccess={responseGoogleSuccess}\r\n      onFailure={responseGoogleFailure}\r\n      cookiePolicy=\"single_host_origin\"\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function FacebookAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_facebook_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new facebook user to server!');\r\n    console.log(response.email);\r\n    Socket.emit('login_request', {\r\n      email: response.email,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n\r\n    history.push('/home');\r\n  }\r\n\r\n  function responseFacebookSuccess(response) {\r\n    if (response.status === 'unknown') {\r\n      console.log('failure:', response);\r\n    } else {\r\n      handleSubmit(response);\r\n      console.log('success:', response);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FacebookLogin\r\n      appId=\"257908695617151\"\r\n      autoLoad={false}\r\n      fields=\"name,email,picture\"\r\n      callback={responseFacebookSuccess}\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport MicrosoftLogin from 'react-microsoft-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function MicrosoftAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_microsoft_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new Microsoft user to server!');\r\n\r\n    Socket.emit('login_request', {\r\n      email: response.account.userName,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n    history.push('/home');\r\n  }\r\n\r\n  function Microsoftresponse(err, response) {\r\n    if (err === undefined) {\r\n      console.log('Response:', response);\r\n      handleSubmit(response);\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MicrosoftLogin\r\n      clientId=\"3a9de6a1-f0fa-480b-bed0-7856d8079de1\"\r\n      authCallback={Microsoftresponse}\r\n      buttonTheme=\"light_short\"\r\n      withUserData=\"true\"\r\n      graphScopes={['profile']}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, ButtonGroup, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavigationBar() {\r\n  return (\r\n    <div>\r\n      <Container style={{textAlign:\"center\"}}>\r\n      <ButtonGroup style={{justifyContent:\"center\", alignItems:\"center\"}} aria-label=\"Navigation bar\">\r\n        <Link to=\"/\">\r\n          <Button variant=\"primary\">Landing</Button>\r\n        </Link>\r\n        <Link to=\"/home\">\r\n          <Button variant=\"primary\">Dashboard</Button>\r\n        </Link>\r\n        <Link to=\"/project\">\r\n          <Button variant=\"primary\">Project</Button>\r\n        </Link>\r\n      </ButtonGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Button, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\n\r\nimport Socket from './Socket';\r\n\r\nexport default function CreateButton({projects}) {\r\n  function handleSubmit(event) {\r\n    const projectName = document.getElementById('name_input');\r\n    console.log('PROJECT: ');\r\n    console.log(projectName.value);\r\n    console.log('PROJECTS: ');\r\n    console.log(projects);\r\n    let projectList = Object.values(projects).map(obj => obj.project_name);\r\n    console.log(projectList);\r\n  \r\n    if (validator.isEmpty(validator.trim(projectName.value))) {\r\n      ReactDOM.render(<Alert className=\"alert-warning\">Warning: Project name was empty or only whitespace.  Please try again with a valid project name.</Alert>, document.getElementById('notif_project'));\r\n    } else if (projectList.some(name => projectName.value === name)){\r\n      ReactDOM.render(<Alert className=\"alert-warning\">Warning: Project name is taken.  Please try again with a unique project name.</Alert>, document.getElementById('notif_project'));\r\n    } else {\r\n      ReactDOM.render(<span />, document.getElementById('notif_project'));\r\n      Socket.emit('create_project', {\r\n        project_name: projectName.value,\r\n        socketid: Socket.id,\r\n      });\r\n      console.log(`Sent the project ${projectName.value} to server!`);\r\n    }\r\n  \r\n    projectName.value = '';\r\n  \r\n    event.preventDefault();\r\n  }\r\n  \r\n  console.log(projects);\r\n  \r\n  return (\r\n    <div align=\"center\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div id=\"notif_project\" />\r\n        <input id=\"name_input\" placeholder=\"Enter new project name\" />\r\n        <Button type=\"submit\" className=\"btn-primary\">Create!</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Badge, Image, DropdownButton, Container, Col, Row\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function UserInfoBar(props) {\r\n  const { headerInfo, badgeInfo, profilePicture } = props;\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\", textAlign:\"center\"}}>\r\n          <Col xs={2.5}>\r\n            <h1>{headerInfo}</h1><Badge variant=\"primary\">{badgeInfo}</Badge>\r\n          </Col>\r\n          <Col xs={2.5}>\r\n            <DropdownButton\r\n              id=\"dropdown-basic-button\"\r\n              title={\r\n                <Image src={profilePicture} width=\"50px\" height=\"50px\" roundedCircle />\r\n              }\r\n            >\r\n            </DropdownButton>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nUserInfoBar.propTypes = {\r\n  headerInfo: PropTypes.string.isRequired,\r\n  badgeInfo: PropTypes.string.isRequired,\r\n  profilePicture: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport * as React from 'react';\r\nimport { Button, Alert } from 'react-bootstrap';\r\nimport * as ReactDOM from 'react-dom';\r\nimport validator from 'validator';\r\nimport PropTypes from 'prop-types';\r\nimport Socket from './Socket';\r\n\r\nexport default function CreateSource(props) {\r\n  const [sourcesList, setSourcesList] = React.useState([]);\r\n  const [sourcesMapList, setSourcesMapList] = React.useState([]);\r\n  const { usingProject } = props;\r\n  const projectName = usingProject;\r\n  function handleSubmit(event) {\r\n    const sourceLink = document.getElementById('name_input');\r\n    event.preventDefault();\r\n    console.log(\"SOURCES\", sourcesList);\r\n    if (validator.isEmpty(validator.trim(sourceLink.value))) {\r\n      ReactDOM.render(<Alert className=\"alert-warning\">Warning: Source name was empty or only whitespace.  Please try again with a valid project name.</Alert>, document.getElementById('notif_project'));\r\n      event.preventDefault();\r\n    } else if (sourcesList.some(name => sourceLink.value === name)) {\r\n      ReactDOM.render(<Alert className=\"alert-warning\">Warning: Source name is taken.  Please try again with a unique project name.</Alert>, document.getElementById('notif_project'));\r\n    } else {\r\n      console.log(`Got source link: ${sourceLink.value}`);\r\n      Socket.emit('add_source_to_project', {\r\n        project_name: projectName,\r\n        source_link: sourceLink.value,\r\n      });\r\n      sourceLink.value = '';\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  \r\n  function deleteSource(index, projectName){\r\n    console.log(\"DELETE\");\r\n    console.log(index);\r\n    Socket.emit(\r\n      'delete_source',\r\n      {\r\n        source_id: index,\r\n        project_name: projectName\r\n      }\r\n    );\r\n  }\r\n  \r\n  function GetSourcesFromServer(){\r\n    React.useEffect(() => {\r\n      Socket.on('all_sources_server', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setSourcesList(data.source_list);\r\n        setSourcesMapList(data.source_map);\r\n      });\r\n    });\r\n    console.log(sourcesList)\r\n    console.log(sourcesMapList)\r\n  }\r\n  \r\n  GetSourcesFromServer();\r\n\r\n  function GetAllSources() {\r\n    React.useEffect(() => {\r\n      Socket.emit('get_all_sources', {\r\n        project_name: projectName,\r\n      });\r\n    }, []);\r\n    React.useEffect(() => {\r\n      Socket.on('all_sources', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setSourcesList(data.source_list);\r\n        setSourcesMapList(data.source_map);\r\n      });\r\n    });\r\n    console.log(sourcesList)\r\n  }\r\n\r\n  GetAllSources();\r\n\r\n  return (\r\n    <div align=\"center\">\r\n      <br />\r\n      <div className=\"h3\">{projectName}</div>\r\n      <div id=\"notif_project\" />\r\n      \r\n      {Object.entries(sourcesMapList).map(([sourceID, sourceName]) => (\r\n        <div key={sourceID} align=\"center\">\r\n          <Button className=\"btn-outline-secondary\" key={sourceID}>{sourceName}</Button>\r\n          {' '}\r\n          <Button className=\"btn-outline-danger\" onClick={() => deleteSource(sourceID, projectName)}>X</Button>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n          \r\n        ))}\r\n      <br/>\r\n      <form onSubmit={handleSubmit}>\r\n        <input id=\"name_input\" placeholder=\"Enter source name\" />\r\n        <Button type=\"submit\" className=\"btn-primary\">Add Source</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nCreateSource.propTypes = {\r\n  usingProject: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport Project from './Project';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <div>\n      <Switch>\n        <Route path=\"/\" component={Landing} exact />\n        <Route path=\"/home\" component={Dashboard} />\n        <Route path=\"/project\" component={Project} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleButton';\r\nimport FacebookAuth from './FacebookButton';\r\nimport MicrosoftAuth from './MicrosoftButton';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport NavigationBar from './NavigationBar';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"Landing\">\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1>ResearchPal</h1>\r\n          <p>The simple research organization tool, designed by researchers for researchers</p>\r\n        </Container>\r\n      </Jumbotron>\r\n      \r\n      <h2 style={{textAlign:\"center\"}}>\r\n        Log in below:\r\n      </h2>\r\n      <Container>\r\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\"}}>\r\n          <Col lg=\"2\">\r\n            <GoogleAuth />\r\n          </Col>\r\n          <Col lg=\"2\">\r\n            <MicrosoftAuth />\r\n          </Col >\r\n          <Col lg=\"2\">\r\n            <Link to=\"/home\">\r\n              <FacebookAuth />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <NavigationBar />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-globals */\r\nimport * as React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Socket from './Socket';\r\nimport CreateButton from './CreateProject';\r\nimport NavigationBar from './NavigationBar';\r\nimport UserInfoBar from './UserInfoBar';\r\n\r\nexport default function Dashboard() {\r\n  const [projects, setProjects] = React.useState(0);\r\n  const [user, setUser] = React.useState(0);\r\n  const [image, setImage] = React.useState(0);\r\n\r\n  function deleteProject(key){\r\n    console.log(\"DELETE\");\r\n    console.log(key);\r\n    Socket.emit(\r\n      'delete_project',\r\n      {\r\n        project_name: key,\r\n      }\r\n    );\r\n    \r\n    Socket.emit(\r\n      'select_project',\r\n      {\r\n        project_name: '',\r\n      },\r\n    );\r\n  }\r\n\r\n  function getStatus(key) {\r\n    console.log(key);\r\n    console.log('Button Clicked');\r\n    Socket.emit(\r\n      'select_project',\r\n      {\r\n        project_name: key,\r\n      },\r\n    );\r\n  }\r\n\r\n  function GetUserInfo() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_user_info');\r\n      Socket.on('user_info', (data) => {\r\n        console.log(`Received user info from server: ${data}`);\r\n        setUser(data);\r\n        console.log(data.profile_picture);\r\n\r\n        let imagelink = 'static/profile-blank.jpg';\r\n        if (data.profile_picture !== null) {\r\n          imagelink = data.profile_picture;\r\n        }\r\n        setImage(imagelink);\r\n      });\r\n    }, []);\r\n  }\r\n  GetUserInfo();\r\n\r\n  function GetAllProjects() {\r\n    React.useEffect(() => {\r\n      Socket.on('all_projects', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setProjects(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  GetAllProjects();\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      <UserInfoBar headerInfo=\"Dashboard\" badgeInfo={user.email} profilePicture={image} />\r\n      <br />\r\n      <NavigationBar />\r\n      <br />\r\n      <CreateButton projects={projects}/>\r\n      <ul>\r\n        <br />\r\n        {Object.keys(projects).map((key, val) => (\r\n          <div key={key} align=\"center\">\r\n          <Button onClick={() => getStatus(projects[key].project_name)} className=\"btn-outline-secondary\" key={key}>{projects[key].project_name}</Button>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n} \r\n","import * as React from 'react';\r\nimport CreateSource from './CreateSource';\r\nimport Socket from './Socket';\r\nimport NavigationBar from './NavigationBar';\r\nimport UserInfoBar from './UserInfoBar';\r\n\r\nexport default function Project() {\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [image, setImage] = React.useState(0);\r\n  function GetUserInfo() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_user_info');\r\n      Socket.on('user_info', (data) => {\r\n        console.log(`Received user info from server: ${data}`);\r\n        console.log(data.profile_picture);\r\n\r\n        let imagelink = 'static/profile-blank.jpg';\r\n        if (data.profile_picture !== null) {\r\n          imagelink = data.profile_picture;\r\n        }\r\n        setImage(imagelink);\r\n      });\r\n    }, []);\r\n  }\r\n  GetUserInfo();\r\n\r\n  function GetProject() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_selected_project');\r\n      Socket.on('give_project_name', (data) => {\r\n        console.log(data.project_name);\r\n        setProjectName(data.project_name);\r\n        console.log(`project name is ${projectName}`);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  function projectSelected() {\r\n    if (projectName === '' || projectName === null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function renderProject() {\r\n    if (projectSelected()) {\r\n      return (<CreateSource usingProject={projectName} />);\r\n    }\r\n    return (\r\n      <div>\r\n        <span className=\"d-flex justify-content-center\">\r\n          A project is not selected, please select a project from the Dashboard.\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  GetProject();\r\n\r\n  return (\r\n    <div className=\"Project\">\r\n      <UserInfoBar headerInfo=\"Project\" badgeInfo={projectName} profilePicture={image} />\r\n      <br />\r\n      <NavigationBar />\r\n      {renderProject()}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}