{"version":3,"sources":["reportWebVitals.js","Socket.jsx","GoogleButton.jsx","FacebookButton.jsx","MicrosoftButton.jsx","NavigationBar.jsx","CreateProject.jsx","LogoutButton.jsx","UserInfoBar.jsx","CreateSource.jsx","index.js","Landing.jsx","Dashboard.jsx","Project.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Socket","SocketIO","GoogleAuth","history","useHistory","clientId","buttonText","onSuccess","response","console","log","emit","email","profileObj","on","data","push","handleSubmit","onFailure","cookiePolicy","FacebookAuth","appId","autoLoad","fields","callback","status","MicrosoftAuth","authCallback","err","undefined","account","userName","buttonTheme","withUserData","graphScopes","NavigationBar","Container","style","textAlign","ButtonGroup","justifyContent","alignItems","aria-label","to","Button","variant","CreateProject","projects","myRef","useRef","useState","show","setShow","errorMessage","setErrorMessage","displayError","message","display","marginTop","Alert","width","onClose","dismissible","Heading","Row","Col","Form","inline","onSubmit","event","projectName","current","value","projectList","Object","values","map","obj","project_name","validator","isEmpty","trim","some","name","socketid","id","preventDefault","Group","controlId","Control","ref","type","placeholder","Logout","onClick","UserInfoBar","props","headerInfo","badgeInfo","profilePicture","noGutters","xs","Badge","DropdownButton","title","Image","src","height","roundedCircle","CreateSource","sourcesList","setSourcesList","sourcesMapList","setSourcesMapList","usingProject","React","useEffect","source_link","source_list","source_map","ListGroup","paddingTop","paddingBottom","entries","sourceID","sourceName","Item","index","source_id","float","marginLeft","sourceLink","Label","ReactDOM","render","StrictMode","path","component","className","Jumbotron","fluid","lg","exact","setProjects","user","setUser","image","setImage","profile_picture","imagelink","keys","key","val","deleteProject","getStatus","setProjectName","document","getElementById"],"mappings":"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","file":"static/js/main.19808c38.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as SocketIO from 'socket.io-client';\n\nconst Socket = SocketIO.connect();\nexport default Socket;\n","import * as React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport Socket from './Socket';\n\nexport default function GoogleAuth() {\n  const history = useHistory();\n  function handleSubmit(response) {\n    Socket.emit('new_google_user', {\n      response,\n    });\n    console.log('Sent new google user to server!');\n\n    Socket.emit('login_request', {\n      email: response.profileObj.email,\n    });\n\n    Socket.on('login_response', (data) => {\n      console.log(data);\n    });\n    history.push('/home');\n  }\n\n  function responseGoogleSuccess(response) {\n    console.log('Success:', response);\n    handleSubmit(response);\n  }\n\n  function responseGoogleFailure(response) {\n    console.log('FAIL:', response);\n  }\n\n  return (\n    <GoogleLogin\n      clientId=\"392545713863-91sppbihnj638rth8gg7upfvjoug9s98.apps.googleusercontent.com\"\n      buttonText=\"Login\"\n      onSuccess={responseGoogleSuccess}\n      onFailure={responseGoogleFailure}\n      cookiePolicy=\"single_host_origin\"\n    />\n  );\n}\n","import * as React from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { useHistory } from 'react-router-dom';\nimport Socket from './Socket';\n\nexport default function FacebookAuth() {\n  const history = useHistory();\n  function handleSubmit(response) {\n    Socket.emit('new_facebook_user', {\n      response,\n    });\n    console.log('Sent new facebook user to server!');\n    console.log(response.email);\n    Socket.emit('login_request', {\n      email: response.email,\n    });\n\n    Socket.on('login_response', (data) => {\n      console.log(data);\n    });\n\n    history.push('/home');\n  }\n\n  function responseFacebookSuccess(response) {\n    if (response.status === 'unknown') {\n      console.log('failure:', response);\n    } else {\n      handleSubmit(response);\n      console.log('success:', response);\n    }\n  }\n\n  return (\n    <FacebookLogin\n      appId=\"257908695617151\"\n      autoLoad={false}\n      fields=\"name,email,picture\"\n      callback={responseFacebookSuccess}\n    />\n  );\n}\n","import * as React from 'react';\nimport MicrosoftLogin from 'react-microsoft-login';\nimport { useHistory } from 'react-router-dom';\nimport Socket from './Socket';\n\nexport default function MicrosoftAuth() {\n  const history = useHistory();\n  function handleSubmit(response) {\n    Socket.emit('new_microsoft_user', {\n      response,\n    });\n    console.log('Sent new Microsoft user to server!');\n\n    Socket.emit('login_request', {\n      email: response.account.userName,\n    });\n\n    Socket.on('login_response', (data) => {\n      console.log(data);\n    });\n    history.push('/home');\n  }\n\n  function Microsoftresponse(err, response) {\n    if (err === undefined) {\n      console.log('Response:', response);\n      handleSubmit(response);\n    } else {\n      console.log(err);\n    }\n  }\n\n  return (\n    <MicrosoftLogin\n      clientId=\"3a9de6a1-f0fa-480b-bed0-7856d8079de1\"\n      authCallback={Microsoftresponse}\n      buttonTheme=\"light_short\"\n      withUserData=\"true\"\n      graphScopes={['profile']}\n    />\n  );\n}\n","import React from 'react';\nimport { Button, ButtonGroup, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport default function NavigationBar() {\n  return (\n    <div>\n      <Container style={{textAlign:\"center\"}}>\n      <ButtonGroup style={{justifyContent:\"center\", alignItems:\"center\"}} aria-label=\"Navigation bar\">\n        <Link to=\"/\">\n          <Button variant=\"primary\">Landing</Button>\n        </Link>\n        <Link to=\"/home\">\n          <Button variant=\"primary\">Dashboard</Button>\n        </Link>\n        <Link to=\"/project\">\n          <Button variant=\"primary\">Project</Button>\n        </Link>\n      </ButtonGroup>\n      </Container>\n    </div>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Button, Container, Row, Col, Form, Alert } from 'react-bootstrap';\nimport validator from 'validator';\nimport Socket from './Socket';\n\nexport default function CreateProject({projects}) {\n  const myRef = useRef(null)\n  const [show, setShow] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('')\n  \n  \n  function displayError(message) {\n    setShow(true)\n    setErrorMessage(message)\n  }\n\n  function handleSubmit(event) {\n    const projectName = myRef.current.value;\n    console.log('PROJECT: ');\n    console.log(projectName);\n    console.log('PROJECTS: ');\n    console.log(projects);\n    let projectList = Object.values(projects).map(obj => obj.project_name);\n    console.log(projectList);\n  \n    if (validator.isEmpty(validator.trim(projectName))) {\n      displayError(\"Project name was empty or only whitespace.  Please try again with a valid project name.\");\n    } else if (projectList.some(name => projectName === name)){\n      displayError(\"Project name is taken.  Please try again with a unique project name.\");\n    } else {\n      Socket.emit('create_project', {\n        project_name: projectName,\n        socketid: Socket.id,\n      });\n      console.log(`Sent the project ${projectName} to server!`);\n    }\n    myRef.current.value = '';\n    event.preventDefault();\n  }\n  \n  console.log(projects);\n  \n  return (\n    <Container>\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:\"1.5%\"}}>\n        <Alert show={show} style={{width: \"40%\"}} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>Error!</Alert.Heading>\n          <p>\n            {errorMessage}\n          </p>\n        </Alert>\n      </div>\n      <Row>\n        <Col>\n          <Form inline onSubmit={handleSubmit} style={{justifyContent:\"center\"}}>\n              <Form.Group controlId=\"formProjectInput\">\n                <Form.Control ref={myRef} type=\"text\" placeholder=\"Enter new project name\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Submit\n              </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Socket from './Socket';\n\nexport default function Logout() {\n  const history = useHistory();\n  function handleSubmit() {\n    Socket.emit('logout');\n\n    history.push('/');\n  }\n\n  return (\n    <Button variant=\"secondary\" onClick={handleSubmit} type=\"submit\">Logout</Button>\n  );\n}\n","import React from 'react';\nimport {\n  Badge, Image, DropdownButton, Container, Col, Row\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Logout from './LogoutButton';\n\nexport default function UserInfoBar(props) {\n  const { headerInfo, badgeInfo, profilePicture } = props;\n  return (\n    <>\n      <Container>\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\", textAlign:\"center\"}}>\n          <Col xs={2.5}>\n            <h1>{headerInfo}</h1><Badge variant=\"primary\">{badgeInfo}</Badge>\n          </Col>\n          <Col xs={2.5}>\n            <DropdownButton\n              id=\"dropdown-basic-button\"\n              title={\n                <Image src={profilePicture} width=\"50px\" height=\"50px\" roundedCircle />\n              }\n            >\n            </DropdownButton>\n          </Col>\n          <Col xs={2.5}>\n            <Logout />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nUserInfoBar.propTypes = {\n  headerInfo: PropTypes.string.isRequired,\n  badgeInfo: PropTypes.string.isRequired,\n  profilePicture: PropTypes.string.isRequired,\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { useRef, useState } from \"react\";\nimport { Button, Col, Container, Form, Row, Alert, ListGroup } from 'react-bootstrap';\nimport validator from 'validator';\nimport PropTypes from 'prop-types';\nimport Socket from './Socket';\nimport { BsFillDashCircleFill } from 'react-icons/bs'\n\nexport default function CreateSource(props) {\n  const [sourcesList, setSourcesList] = useState([]);\n  const [sourcesMapList, setSourcesMapList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('')\n  const myRef = useRef(null)\n  const { usingProject } = props;\n\n  function displayError(message) {\n    setShow(true)\n    setErrorMessage(message)\n  }\n\n  function handleSubmit(event) {\n    const sourceLink = myRef.current.value;\n    console.log(sourceLink);\n    console.log(\"SOURCES\", sourcesList);\n    if (validator.isEmpty(validator.trim(sourceLink))) {\n      displayError(\"Source name was empty or only whitespace. Please try again with a valid project name.\")\n    } else if (sourcesList.some(name => sourceLink === name)) {\n      displayError(\"Source name is taken. Please try again with a unique project name.\")\n    } else {\n      console.log(`Got source link: ${sourceLink}`);\n      Socket.emit('add_source_to_project', {\n        project_name: usingProject,\n        source_link: sourceLink,\n      });\n      myRef.current.value='';\n    }\n    event.preventDefault();\n  }\n  \n  function deleteSource(index, projectName){\n    console.log(\"DELETE\");\n    console.log(index);\n    Socket.emit(\n      'delete_source',\n      {\n        source_id: index,\n        project_name: projectName\n      }\n    );\n  }\n\n  function InvalidURLError(){\n    React.useEffect(() => {\n      Socket.on('invalid_url', (data) => {\n        console.log(`Received projects from server: ${data}`);\n        displayError(`Invalid URL: [ ${data.source_link} ]  Please ensure that you have copied the entire URL (including the protocol)`);\n      });\n    });\n  }\n\n  InvalidURLError();\n  \n  function GetSourcesFromServer(){\n    React.useEffect(() => {\n      Socket.on('all_sources_server', (data) => {\n        console.log(`Received projects from server: ${data}`);\n        setSourcesList(data.source_list);\n        setSourcesMapList(data.source_map);\n      });\n    });\n    console.log(sourcesList)\n    console.log(sourcesMapList)\n  }\n  \n  GetSourcesFromServer();\n\n  function GetAllSources() {\n    React.useEffect(() => {\n      Socket.emit('get_all_sources', {\n        project_name: usingProject,\n      });\n    }, []);\n    React.useEffect(() => {\n      Socket.on('all_sources', (data) => {\n        console.log(`Received projects from server: ${data}`);\n        setSourcesList(data.source_list);\n        setSourcesMapList(data.source_map);\n      });\n    });\n    console.log(sourcesList)\n  }\n\n  GetAllSources();\n\n  return (\n    <Container style={{textAlign:\"center\"}}>\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:\"1.5%\"}}>\n            <Alert show={show} style={{width: \"40%\"}} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n                <p>\n                  {errorMessage}\n                </p>\n           </Alert>\n      </div>\n      <Row xs={1}>\n        <Col>\n            <h3>{usingProject}</h3>\n        </Col>\n        <ListGroup style={{paddingTop: \"2%\", paddingBottom: \"2%\" ,alignItems: \"center\"}}>\n          {Object.entries(sourcesMapList).map(([sourceID, sourceName]) => (\n            <ListGroup.Item key={sourceID}>{sourceName}<Button onClick={() => deleteSource(sourceID, usingProject)} variant=\"danger\" style={{float: \"right\", marginLeft: \"20px\"}}><BsFillDashCircleFill /></Button></ListGroup.Item>\n          ))}\n        </ListGroup>\n        <Col>\n          <Form inline onSubmit={handleSubmit} style={{justifyContent:\"center\"}}>\n            <Form.Group id=\"name_input\">\n              <Form.Label>Source</Form.Label>\n              <Form.Control ref={myRef} type=\"text\" placeholder=\"Enter Source name\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nCreateSource.propTypes = {\n  usingProject: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport Project from './Project';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <div>\n      <Switch>\n        <Route path=\"/\" component={Landing} exact />\n        <Route path=\"/home\" component={Dashboard} />\n        <Route path=\"/project\" component={Project} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleButton';\nimport FacebookAuth from './FacebookButton';\nimport MicrosoftAuth from './MicrosoftButton';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport NavigationBar from './NavigationBar';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { Col, Container, Row } from 'react-bootstrap';\n\nexport default function Landing() {\n  return (\n    <div className=\"Landing\">\n      <Jumbotron fluid>\n        <Container>\n          <h1>ResearchPal</h1>\n          <p>The simple research organization tool, designed by researchers for researchers</p>\n        </Container>\n      </Jumbotron>\n      \n      <h2 style={{textAlign:\"center\"}}>\n        Log in below:\n      </h2>\n      <Container>\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\"}}>\n          <Col lg=\"2\">\n            <GoogleAuth />\n          </Col>\n          <Col lg=\"2\">\n            <MicrosoftAuth />\n          </Col >\n          <Col lg=\"2\">\n            <Link to=\"/home\">\n              <FacebookAuth />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n      <NavigationBar />\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-restricted-globals */\nimport * as React from 'react';\nimport { Button, Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport Socket from './Socket';\nimport CreateProject from './CreateProject';\nimport NavigationBar from './NavigationBar';\nimport UserInfoBar from './UserInfoBar';\nimport { BsFillDashCircleFill } from 'react-icons/bs'\n\nexport default function Dashboard() {\n  const [projects, setProjects] = React.useState(0);\n  const [user, setUser] = React.useState(0);\n  const [image, setImage] = React.useState(0);\n\n  function deleteProject(key){\n    console.log(`Deleting ${key}`);\n    Socket.emit(\n      'delete_project',\n      {\n        project_name: key,\n      }\n    );\n  }\n\n  function getStatus(key) {\n    console.log(`Getting information about ${key}`);\n    Socket.emit(\n      'select_project',\n      {\n        project_name: key,\n      },\n    );\n  }\n\n  function GetUserInfo() {\n    React.useEffect(() => {\n      Socket.emit('request_user_info');\n      Socket.on('user_info', (data) => {\n        console.log(`Received user info from server: ${data}`);\n        setUser(data);\n        console.log(data.profile_picture);\n\n        let imagelink = 'static/profile-blank.jpg';\n        if (data.profile_picture !== null) {\n          imagelink = data.profile_picture;\n        }\n        setImage(imagelink);\n      });\n    }, []);\n  }\n  GetUserInfo();\n\n  function GetAllProjects() {\n    React.useEffect(() => {\n      Socket.on('all_projects', (data) => {\n        console.log(`Received projects from server: ${data}`);\n        setProjects(data);\n      });\n    });\n  }\n\n  GetAllProjects();\n\n  return (\n    <Container>\n      <Row xs={1}>\n        <Col>\n          <UserInfoBar headerInfo=\"Dashboard\" badgeInfo={user.email} profilePicture={image} />\n        </Col>\n        <Col>\n          <NavigationBar />\n        </Col>\n        <Col>\n          <CreateProject projects={projects} />\n        </Col>\n        <ListGroup style={{paddingTop: \"2%\", alignItems: \"center\"}}>\n          {Object.keys(projects).map((key, val) => \n            <ListGroup.Item style={{width: \"50%\"}}>\n              {projects[key].project_name}\n              <Button variant=\"danger\" onClick={() => deleteProject(projects[key].project_name)} style={{float: \"right\"}} >DELETE</Button>  \n              <Button variant=\"success\" onClick={() => getStatus(projects[key].project_name)} style={{float: \"right\"}} >SELECT</Button>\n            </ListGroup.Item>\n          )}\n          \n        </ListGroup>\n      </Row>\n    </Container>\n  );\n} \n","import * as React from 'react';\nimport CreateSource from './CreateSource';\nimport Socket from './Socket';\nimport NavigationBar from './NavigationBar';\nimport UserInfoBar from './UserInfoBar';\n\nexport default function Project() {\n  const [projectName, setProjectName] = React.useState('');\n  const [image, setImage] = React.useState(0);\n  function GetUserInfo() {\n    React.useEffect(() => {\n      Socket.emit('request_user_info');\n      Socket.on('user_info', (data) => {\n        console.log(`Received user info from server: ${data}`);\n        console.log(data.profile_picture);\n\n        let imagelink = 'static/profile-blank.jpg';\n        if (data.profile_picture !== null) {\n          imagelink = data.profile_picture;\n        }\n        setImage(imagelink);\n      });\n    }, []);\n  }\n  GetUserInfo();\n\n  function GetProject() {\n    React.useEffect(() => {\n      Socket.emit('request_selected_project');\n      Socket.on('give_project_name', (data) => {\n        console.log(data.project_name);\n        setProjectName(data.project_name);\n        console.log(`project name is ${projectName}`);\n      });\n    }, []);\n  }\n\n  function projectSelected() {\n    if (projectName === '' || projectName === null) {\n      return false;\n    }\n    return true;\n  }\n\n  function renderProject() {\n    if (projectSelected()) {\n      return (<CreateSource usingProject={projectName} />);\n    }\n    return (\n      <div>\n        <span className=\"d-flex justify-content-center\">\n          A project is not selected, please select a project from the Dashboard.\n        </span>\n      </div>\n    );\n  }\n\n  GetProject();\n\n  return (\n    <div className=\"Project\">\n      <UserInfoBar headerInfo=\"Project\" badgeInfo={projectName} profilePicture={image} />\n      <br />\n      <NavigationBar />\n      {renderProject()}\n    </div>\n  );\n}\n"],"sourceRoot":""}