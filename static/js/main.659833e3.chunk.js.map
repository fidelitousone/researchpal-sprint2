{"version":3,"sources":["reportWebVitals.js","Socket.jsx","GoogleButton.jsx","FacebookButton.jsx","MicrosoftButton.jsx","NavigationBar.jsx","CreateProject.jsx","LogoutButton.jsx","UserInfoBar.jsx","CreateSource.jsx","index.js","Landing.jsx","Dashboard.jsx","Project.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Socket","SocketIO","GoogleAuth","history","useHistory","clientId","buttonText","onSuccess","response","console","log","emit","email","profileObj","on","data","push","handleSubmit","onFailure","cookiePolicy","FacebookAuth","appId","autoLoad","fields","callback","status","MicrosoftAuth","authCallback","err","undefined","account","userName","buttonTheme","withUserData","graphScopes","NavigationBar","Container","style","textAlign","ButtonGroup","justifyContent","alignItems","aria-label","to","Button","variant","CreateProject","projects","myRef","useRef","useState","show","setShow","errorMessage","setErrorMessage","displayError","message","display","marginTop","Alert","width","onClose","dismissible","Heading","Row","Col","Form","inline","onSubmit","event","projectName","current","value","projectList","Object","values","map","obj","project_name","validator","isEmpty","trim","some","name","socketid","id","preventDefault","Group","controlId","Control","ref","type","placeholder","Logout","onClick","UserInfoBar","props","headerInfo","badgeInfo","profilePicture","noGutters","xs","Badge","DropdownButton","title","Image","src","height","roundedCircle","CreateSource","sourcesList","setSourcesList","sourcesMapList","setSourcesMapList","usingProject","React","useEffect","source_list","source_map","ListGroup","paddingTop","paddingBottom","entries","sourceID","sourceName","Item","index","source_id","float","marginLeft","sourceLink","source_link","Label","ReactDOM","render","StrictMode","path","component","className","Jumbotron","fluid","lg","exact","setProjects","user","setUser","image","setImage","profile_picture","imagelink","keys","key","val","action","getStatus","deleteProject","setProjectName","document","getElementById"],"mappings":"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","file":"static/js/main.659833e3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as SocketIO from 'socket.io-client';\r\n\r\nconst Socket = SocketIO.connect();\r\nexport default Socket;\r\n","import * as React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function GoogleAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_google_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new google user to server!');\r\n\r\n    Socket.emit('login_request', {\r\n      email: response.profileObj.email,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n    history.push('/home');\r\n  }\r\n\r\n  function responseGoogleSuccess(response) {\r\n    console.log('Success:', response);\r\n    handleSubmit(response);\r\n  }\r\n\r\n  function responseGoogleFailure(response) {\r\n    console.log('FAIL:', response);\r\n  }\r\n\r\n  return (\r\n    <GoogleLogin\r\n      clientId=\"392545713863-91sppbihnj638rth8gg7upfvjoug9s98.apps.googleusercontent.com\"\r\n      buttonText=\"Login\"\r\n      onSuccess={responseGoogleSuccess}\r\n      onFailure={responseGoogleFailure}\r\n      cookiePolicy=\"single_host_origin\"\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function FacebookAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_facebook_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new facebook user to server!');\r\n    console.log(response.email);\r\n    Socket.emit('login_request', {\r\n      email: response.email,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n\r\n    history.push('/home');\r\n  }\r\n\r\n  function responseFacebookSuccess(response) {\r\n    if (response.status === 'unknown') {\r\n      console.log('failure:', response);\r\n    } else {\r\n      handleSubmit(response);\r\n      console.log('success:', response);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FacebookLogin\r\n      appId=\"257908695617151\"\r\n      autoLoad={false}\r\n      fields=\"name,email,picture\"\r\n      callback={responseFacebookSuccess}\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport MicrosoftLogin from 'react-microsoft-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Socket from './Socket';\r\n\r\nexport default function MicrosoftAuth() {\r\n  const history = useHistory();\r\n  function handleSubmit(response) {\r\n    Socket.emit('new_microsoft_user', {\r\n      response,\r\n    });\r\n    console.log('Sent new Microsoft user to server!');\r\n\r\n    Socket.emit('login_request', {\r\n      email: response.account.userName,\r\n    });\r\n\r\n    Socket.on('login_response', (data) => {\r\n      console.log(data);\r\n    });\r\n    history.push('/home');\r\n  }\r\n\r\n  function Microsoftresponse(err, response) {\r\n    if (err === undefined) {\r\n      console.log('Response:', response);\r\n      handleSubmit(response);\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MicrosoftLogin\r\n      clientId=\"3a9de6a1-f0fa-480b-bed0-7856d8079de1\"\r\n      authCallback={Microsoftresponse}\r\n      buttonTheme=\"light_short\"\r\n      withUserData=\"true\"\r\n      graphScopes={['profile']}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, ButtonGroup, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavigationBar() {\r\n  return (\r\n    <div>\r\n      <Container style={{textAlign:\"center\"}}>\r\n      <ButtonGroup style={{justifyContent:\"center\", alignItems:\"center\"}} aria-label=\"Navigation bar\">\r\n        <Link to=\"/\">\r\n          <Button variant=\"primary\">Landing</Button>\r\n        </Link>\r\n        <Link to=\"/home\">\r\n          <Button variant=\"primary\">Dashboard</Button>\r\n        </Link>\r\n        <Link to=\"/project\">\r\n          <Button variant=\"primary\">Project</Button>\r\n        </Link>\r\n      </ButtonGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button, Container, Row, Col, Form, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Socket from './Socket';\r\n\r\nexport default function CreateProject({projects}) {\r\n  const myRef = useRef(null)\r\n  const [show, setShow] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  \r\n  \r\n  function displayError(message) {\r\n    setShow(true)\r\n    setErrorMessage(message)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    const projectName = myRef.current.value;\r\n    console.log('PROJECT: ');\r\n    console.log(projectName);\r\n    console.log('PROJECTS: ');\r\n    console.log(projects);\r\n    let projectList = Object.values(projects).map(obj => obj.project_name);\r\n    console.log(projectList);\r\n  \r\n    if (validator.isEmpty(validator.trim(projectName))) {\r\n      displayError(\"Project name was empty or only whitespace.  Please try again with a valid project name.\");\r\n    } else if (projectList.some(name => projectName === name)){\r\n      displayError(\"Project name is taken.  Please try again with a unique project name.\");\r\n    } else {\r\n      Socket.emit('create_project', {\r\n        project_name: projectName,\r\n        socketid: Socket.id,\r\n      });\r\n      console.log(`Sent the project ${projectName} to server!`);\r\n    }\r\n    myRef.current.value = '';\r\n    event.preventDefault();\r\n  }\r\n  \r\n  console.log(projects);\r\n  \r\n  return (\r\n    <Container>\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:\"1.5%\"}}>\r\n        <Alert show={show} style={{width: \"40%\"}} variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Error!</Alert.Heading>\r\n          <p>\r\n            {errorMessage}\r\n          </p>\r\n        </Alert>\r\n      </div>\r\n      <Row>\r\n        <Col>\r\n          <Form inline onSubmit={handleSubmit} style={{justifyContent:\"center\"}}>\r\n              <Form.Group controlId=\"formProjectInput\">\r\n                <Form.Control ref={myRef} type=\"text\" placeholder=\"Enter new project name\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n              </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport Socket from './Socket';\r\n\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  function handleSubmit() {\r\n    Socket.emit('logout');\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"secondary\" onClick={handleSubmit} type=\"submit\">Logout</Button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Badge, Image, DropdownButton, Container, Col, Row\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Logout from './LogoutButton';\r\n\r\nexport default function UserInfoBar(props) {\r\n  const { headerInfo, badgeInfo, profilePicture } = props;\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\", textAlign:\"center\"}}>\r\n          <Col xs={2.5}>\r\n            <h1>{headerInfo}</h1><Badge variant=\"primary\">{badgeInfo}</Badge>\r\n          </Col>\r\n          <Col xs={2.5}>\r\n            <DropdownButton\r\n              id=\"dropdown-basic-button\"\r\n              title={\r\n                <Image src={profilePicture} width=\"50px\" height=\"50px\" roundedCircle />\r\n              }\r\n            >\r\n            </DropdownButton>\r\n          </Col>\r\n          <Col xs={2.5}>\r\n            <Logout />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nUserInfoBar.propTypes = {\r\n  headerInfo: PropTypes.string.isRequired,\r\n  badgeInfo: PropTypes.string.isRequired,\r\n  profilePicture: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row, Alert, ListGroup } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport PropTypes from 'prop-types';\r\nimport Socket from './Socket';\r\nimport { BsFillDashCircleFill } from 'react-icons/bs'\r\n\r\nexport default function CreateSource(props) {\r\n  const [sourcesList, setSourcesList] = useState([]);\r\n  const [sourcesMapList, setSourcesMapList] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const myRef = useRef(null)\r\n  const { usingProject } = props;\r\n\r\n  function displayError(message) {\r\n    setShow(true)\r\n    setErrorMessage(message)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    const sourceLink = myRef.current.value;\r\n    console.log(sourceLink);\r\n    console.log(\"SOURCES\", sourcesList);\r\n    if (validator.isEmpty(validator.trim(sourceLink))) {\r\n      displayError(\"Source name was empty or only whitespace. Please try again with a valid project name.\")\r\n    } else if (sourcesList.some(name => sourceLink === name)) {\r\n      displayError(\"Source name is taken. Please try again with a unique project name.\")\r\n    } else {\r\n      console.log(`Got source link: ${sourceLink}`);\r\n      Socket.emit('add_source_to_project', {\r\n        project_name: usingProject,\r\n        source_link: sourceLink,\r\n      });\r\n      myRef.current.value='';\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  \r\n  function deleteSource(index, projectName){\r\n    console.log(\"DELETE\");\r\n    console.log(index);\r\n    Socket.emit(\r\n      'delete_source',\r\n      {\r\n        source_id: index,\r\n        project_name: projectName\r\n      }\r\n    );\r\n  }\r\n  \r\n  function GetSourcesFromServer(){\r\n    React.useEffect(() => {\r\n      Socket.on('all_sources_server', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setSourcesList(data.source_list);\r\n        setSourcesMapList(data.source_map);\r\n      });\r\n    });\r\n    console.log(sourcesList)\r\n    console.log(sourcesMapList)\r\n  }\r\n  \r\n  GetSourcesFromServer();\r\n\r\n  function GetAllSources() {\r\n    React.useEffect(() => {\r\n      Socket.emit('get_all_sources', {\r\n        project_name: usingProject,\r\n      });\r\n    }, []);\r\n    React.useEffect(() => {\r\n      Socket.on('all_sources', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setSourcesList(data.source_list);\r\n        setSourcesMapList(data.source_map);\r\n      });\r\n    });\r\n    console.log(sourcesList)\r\n  }\r\n\r\n  GetAllSources();\r\n\r\n  return (\r\n    <Container style={{textAlign:\"center\"}}>\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:\"1.5%\"}}>\r\n            <Alert show={show} style={{width: \"40%\"}} variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Error!</Alert.Heading>\r\n                <p>\r\n                  {errorMessage}\r\n                </p>\r\n           </Alert>\r\n      </div>\r\n      <Row xs={1}>\r\n        <Col>\r\n            <h3>{usingProject}</h3>\r\n        </Col>\r\n        <ListGroup style={{paddingTop: \"2%\", paddingBottom: \"2%\" ,alignItems: \"center\"}}>\r\n          {Object.entries(sourcesMapList).map(([sourceID, sourceName]) => (\r\n            <ListGroup.Item key={sourceID}>{sourceName}<Button onClick={() => deleteSource(sourceID, usingProject)} variant=\"danger\" style={{float: \"right\", marginLeft: \"20px\"}}><BsFillDashCircleFill /></Button></ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n        <Col>\r\n          <Form inline onSubmit={handleSubmit} style={{justifyContent:\"center\"}}>\r\n            <Form.Group id=\"name_input\">\r\n              <Form.Label>Source</Form.Label>\r\n              <Form.Control ref={myRef} type=\"text\" placeholder=\"Enter Source name\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nCreateSource.propTypes = {\r\n  usingProject: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Landing from './Landing';\r\nimport Dashboard from './Dashboard';\r\nimport Project from './Project';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <BrowserRouter>\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/\" component={Landing} exact />\r\n        <Route path=\"/home\" component={Dashboard} />\r\n        <Route path=\"/project\" component={Project} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleButton';\r\nimport FacebookAuth from './FacebookButton';\r\nimport MicrosoftAuth from './MicrosoftButton';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport NavigationBar from './NavigationBar';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"Landing\">\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1>ResearchPal</h1>\r\n          <p>The simple research organization tool, designed by researchers for researchers</p>\r\n        </Container>\r\n      </Jumbotron>\r\n      \r\n      <h2 style={{textAlign:\"center\"}}>\r\n        Log in below:\r\n      </h2>\r\n      <Container>\r\n        <Row noGutters=\"true\" style={{justifyContent:\"center\", alignItems:\"center\"}}>\r\n          <Col lg=\"2\">\r\n            <GoogleAuth />\r\n          </Col>\r\n          <Col lg=\"2\">\r\n            <MicrosoftAuth />\r\n          </Col >\r\n          <Col lg=\"2\">\r\n            <Link to=\"/home\">\r\n              <FacebookAuth />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <NavigationBar />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-globals */\r\nimport * as React from 'react';\r\nimport { Button, Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport Socket from './Socket';\r\nimport CreateProject from './CreateProject';\r\nimport NavigationBar from './NavigationBar';\r\nimport UserInfoBar from './UserInfoBar';\r\nimport { BsFillDashCircleFill } from 'react-icons/bs'\r\n\r\nexport default function Dashboard() {\r\n  const [projects, setProjects] = React.useState(0);\r\n  const [user, setUser] = React.useState(0);\r\n  const [image, setImage] = React.useState(0);\r\n\r\n  function deleteProject(key){\r\n    console.log(\"DELETE\");\r\n    console.log(key);\r\n    Socket.emit(\r\n      'delete_project',\r\n      {\r\n        project_name: key,\r\n      }\r\n    );\r\n    \r\n    Socket.emit(\r\n      'select_project',\r\n      {\r\n        project_name: '',\r\n      },\r\n    );\r\n  }\r\n\r\n  function getStatus(key) {\r\n    console.log(key);\r\n    console.log('Button Clicked');\r\n    Socket.emit(\r\n      'select_project',\r\n      {\r\n        project_name: key,\r\n      },\r\n    );\r\n  }\r\n\r\n  function GetUserInfo() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_user_info');\r\n      Socket.on('user_info', (data) => {\r\n        console.log(`Received user info from server: ${data}`);\r\n        setUser(data);\r\n        console.log(data.profile_picture);\r\n\r\n        let imagelink = 'static/profile-blank.jpg';\r\n        if (data.profile_picture !== null) {\r\n          imagelink = data.profile_picture;\r\n        }\r\n        setImage(imagelink);\r\n      });\r\n    }, []);\r\n  }\r\n  GetUserInfo();\r\n\r\n  function GetAllProjects() {\r\n    React.useEffect(() => {\r\n      Socket.on('all_projects', (data) => {\r\n        console.log(`Received projects from server: ${data}`);\r\n        setProjects(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  GetAllProjects();\r\n\r\n  return (\r\n    <Container>\r\n      <Row xs={1}>\r\n        <Col>\r\n          <UserInfoBar headerInfo=\"Dashboard\" badgeInfo={user.email} profilePicture={image} />\r\n        </Col>\r\n        <Col>\r\n          <NavigationBar />\r\n        </Col>\r\n        <Col>\r\n          <CreateProject projects={projects} />\r\n        </Col>\r\n        <ListGroup style={{paddingTop: \"2%\", alignItems: \"center\"}}>\r\n          {Object.keys(projects).map((key, val) => \r\n            <ListGroup.Item action onClick={() => getStatus(projects[key].project_name)} style={{width: \"25%\"}}>\r\n              {projects[key].project_name}<Button style={{float: \"right\"}} variant=\"danger\" onClick={() => deleteProject(projects[key].project_name)}><BsFillDashCircleFill /></Button>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Row>\r\n    </Container>\r\n  );\r\n} \r\n","import * as React from 'react';\r\nimport CreateSource from './CreateSource';\r\nimport Socket from './Socket';\r\nimport NavigationBar from './NavigationBar';\r\nimport UserInfoBar from './UserInfoBar';\r\n\r\nexport default function Project() {\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [image, setImage] = React.useState(0);\r\n  function GetUserInfo() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_user_info');\r\n      Socket.on('user_info', (data) => {\r\n        console.log(`Received user info from server: ${data}`);\r\n        console.log(data.profile_picture);\r\n\r\n        let imagelink = 'static/profile-blank.jpg';\r\n        if (data.profile_picture !== null) {\r\n          imagelink = data.profile_picture;\r\n        }\r\n        setImage(imagelink);\r\n      });\r\n    }, []);\r\n  }\r\n  GetUserInfo();\r\n\r\n  function GetProject() {\r\n    React.useEffect(() => {\r\n      Socket.emit('request_selected_project');\r\n      Socket.on('give_project_name', (data) => {\r\n        console.log(data.project_name);\r\n        setProjectName(data.project_name);\r\n        console.log(`project name is ${projectName}`);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  function projectSelected() {\r\n    if (projectName === '' || projectName === null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function renderProject() {\r\n    if (projectSelected()) {\r\n      return (<CreateSource usingProject={projectName} />);\r\n    }\r\n    return (\r\n      <div>\r\n        <span className=\"d-flex justify-content-center\">\r\n          A project is not selected, please select a project from the Dashboard.\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  GetProject();\r\n\r\n  return (\r\n    <div className=\"Project\">\r\n      <UserInfoBar headerInfo=\"Project\" badgeInfo={projectName} profilePicture={image} />\r\n      <br />\r\n      <NavigationBar />\r\n      {renderProject()}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}